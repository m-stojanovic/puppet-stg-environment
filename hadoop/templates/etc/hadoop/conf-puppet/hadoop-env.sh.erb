# Set Hadoop-specific environment variables here.

# The only required environment variable is JAVA_HOME.  All others are
# optional.  When running a distributed configuration it is best to
# set JAVA_HOME in this file, so that it is correctly defined on
# remote nodes.

# The java implementation to use.  Required.
<% if scope['hadoop::java_home'] -%>
export JAVA_HOME=<%= scope['hadoop::java_home'] %>
<% else %>
export JAVA_HOME=<%= scope.lookupvar("java::jdk::java_home") %>
<% end %>
# Extra Java CLASSPATH elements.  Optional.
export HADOOP_CLASSPATH="/usr/lib/hadoop/lib/cloudera-hadoop-lzo.jar:/usr/lib/hbase/conf:/usr/lib/hbase/hbase.jar:/usr/lib/hbase/lib/zookeeper.jar:/usr/lib/hbase/lib/*:$HADOOP_CLASSPATH"

# The maximum amount of heap to use, in MB. Default is 1000.
export HADOOP_HEAPSIZE=10000
#export HADOOP_OPTS="-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Djava.net.preferIPv4Stack=true $HADOOP_CLIENT_OPTS"

#Added $HIVE_JMX_OPTS that is set by hive-env.sh when starting hiveserver
export HADOOP_OPTS="-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Djava.net.preferIPv4Stack=true $HIVE_JMX_OPTS $HADOOP_CLIENT_OPTS "

# The following applies to multiple commands (fs, dfs, fsck, distcp etc)
#export HADOOP_CLIENT_OPTS="-Xmx256m"
export HADOOP_CLIENT_OPTS="<%= scope['hadoop::config::hadoop_client_opts'] %> $HADOOP_CLIENT_OPTS"

# The ZKFC does not need a large heap, and keeping it small avoids
# any potential for long GC pauses
export HADOOP_ZKFC_OPTS="-Xmx256m"

# Extra Java runtime options.  Empty by default.
export HADOOP_JMX_BASE="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
export HADOOP_NAMENODE_OPTS="-Xmx<%= scope['hadoop::config::namenode_heap_mb'] %>m $HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=8004"
export HADOOP_DATANODE_OPTS="-Xmx<%= scope['hadoop::config::datanode_heap_mb'] %>m $HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=8006"
export HADOOP_BALANCER_OPTS="-Xmx<%= scope['hadoop::config::datanode_heap_mb'] %>m $HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=8007"

# File holding mapreduce/yarn specific java settings
<% if scope['hadoop::config::mapreduce_framework_name'] != "local" %>
YARN_ENV_SCRIPT="/etc/hadoop/conf/yarn-env.sh"
if [ -e $YARN_ENV_SCRIPT ]; then
. $YARN_ENV_SCRIPT
fi
<% else %>
MAPRED_ENV_SCRIPT="/etc/hadoop/conf/mapred-env.sh"
if [ -e $MAPRED_ENV_SCRIPT ]; then
. $MAPRED_ENV_SCRIPT
fi
<% end %>

# Where log files are stored.  $HADOOP_HOME/logs by default.
export HADOOP_LOG_DIR=/var/log/hadoop

# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.
# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves

# host:path where hadoop code should be rsync'd from.  Unset by default.
# export HADOOP_MASTER=master:/home/$USER/src/hadoop

# Seconds to sleep between slave commands.  Unset by default.  This
# can be useful in large clusters, where, e.g., slave rsyncs can
# otherwise arrive faster than the master can service them.
# export HADOOP_SLAVE_SLEEP=0.1

# The directory where pid files are stored. /tmp by default.
# export HADOOP_PID_DIR=/var/hadoop/pids

# A string representing this instance of hadoop. $USER by default.
# export HADOOP_IDENT_STRING=$USER

# The scheduling priority for daemon processes.  See 'man nice'.
# export HADOOP_NICENESS=10

<% if not scope['hadoop::config::extra_opts_hadoop_env_malloc_arena_max'].nil? -%>
<%= scope['hadoop::config::extra_opts_hadoop_env_malloc_arena_max'] %>
<% end -%>
