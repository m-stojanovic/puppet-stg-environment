smoketest {

  type = userResponse
  mode = <%= @vars['st_mode'] %> // export-store, export-test

  howMany = 1
  requestTimeout = <%= @vars['st_requesttimeout'] %>
  workerThreads = 30
  maxReadRetries = <%= @vars['st_maxreadretries'] %>
  retryReadInterval = <%= @vars['st_retryreadinterval'] %>

  logLevel = <%= @vars['st_loglevel'] %>

  statsFile = "<%= @vars['st_statsfile'] %>"
//  statsFileWithTimeStamp = true

  resultLimit {
    successPercentage = <%= @vars['rl_successpercentage'] %>
    averageRequestDuration = "<%= @vars['rl_averagerequestduration'] %>"
  }


  batch {
    fileDir = "exportservicecalls"
    filePeriod = 4.hour
  }

  export {
    data {
      tenantId = 99907
      userIdRange = [0, 99999]
      groupIdRange  = [1, 100]
      messageIdRange = [0, 99999]
      maxResponsesPerSendout = 5
      deleteMarkersOnSuccess = true // actually deletes markers only if success rate is >= successPercentage
      maxAttributeNameLength = 50
      maxAttributeNames = 30
      maxAttributesPerRequest = 100
      unicodeStrings = false
    }

    test {
      maxExportStatusReadRetries = <%= @vars['ex_tst_maxexportstatusreadretries'] %>
      retryExportStatusReadInterval = <%= @vars['ex_tst_exportstatusreadinterval'] %>
    }
  }
}

userresponseserviceClient {
  connect {
    scheme = "<%= scope['dsglobals::zk_scheme'] %>"
    quorum  = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
    path = "<%= @vars['urc_path'] %>"
  }
  client {
    maxRetries = 3
    thriftMux = true
    workerThreads = 30
    workerThreadPoolBufferSize = 30
    checkServiceAvailability = true
  }
  processing {
    timeout = 111.seconds
  }
}

userresponseReadConf {
  connect {
    scheme = "<%= scope['dsglobals::zk_scheme'] %>"
    quorum  = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
  }
}

etlServiceConf {
   quorum = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
   serviceName = "<%= @vars['etl_servicename'] %>"
   timeout = 30.minutes
   secretKey = "<%= @vars['etl_secret'] %>"
}

userserviceClient {
  connect {
    scheme = "<%= scope['dsglobals::zk_scheme'] %>"
    quorum  = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
    path = "<%= @vars['usc_path'] %>"
  }
  client {
    maxRetries = 3
    thriftMux = true
    workerThreads = 30
    checkServiceAvailability = true
  }
  processing {
    timeout = 5.seconds
  }
}

statistics {
  statsWindows = [1.minute, 10.minutes, 1.hour]
  dumpInterval = "<%= @vars['stats_dumpinterval'] %>"
  httpConnector {
    url = "<%= @vars['stats_url'] %>"
    timeout = "300.seconds"
  }
}
