smoketest {

  type = userResponse
  mode = <%= @vars['st_mode'] %> // speed, batch-store, batch-test

  howMany = 100
  requestTimeout = <%= @vars['st_requesttimeout'] %>
  requestDelay = <%= @vars['st_requestdelay'] %>
  workerThreads = 30
  maxReadRetries = <%= @vars['st_maxreadretries'] %>
  retryReadInterval = <%= @vars['st_retryreadinterval'] %>

  logLevel = <%= @vars['st_loglevel'] %>

  statsFile = "<%= @vars['st_statsfile'] %>"

  resultLimit { 
    successPercentage = <%= @vars['rl_successpercentage'] %>
    averageRequestDuration = "<%= @vars['rl_averagerequestduration'] %>"
  }

  findUser {
    destination = "<%= @vars['fu_destination'] %>"
  }


  userResponse {
    data {
      tenantId = <%= @vars['ur_tenantid'] %>
      userIdRange = [0, 99999]
      messageIdRange = [0, 99999]
      deleteMarkersOnSuccess = <%= @vars['ur_deletemarkersonsuccess'] %> // actually deletes markers only if success rate is >= successPercentage
    }
  }

}

userserviceClient {
  connect {
    scheme = "<%= scope['dsglobals::zk_scheme'] %>"
    quorum  = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
    path = "<%= @vars['usc_path'] %>"
  }
  client {
    maxRetries = 3
    thriftMux = true
    workerThreads = 30
    checkServiceAvailability = true
  }
  processing {
    timeout = 5.seconds
  }
}

userresponseserviceClient {
  connect {
    scheme = "<%= scope['dsglobals::zk_scheme'] %>"
    quorum  = "<%= scope['dsglobals::api_zookeeper_quorum'] %>"
    path = "<%= @vars['urc_path'] %>"
  }
  client {
    maxRetries = 3
    thriftMux = true
    workerThreads = 30
    workerThreadPoolBufferSize = 30
    checkServiceAvailability = true
  }
  processing {
    timeout = 5.seconds
  }
}


statistics {
  statsWindows = [1.minute, 10.minutes, 1.hour]
  dumpInterval = "<%= @vars['stats_dumpinterval'] %>"
  httpConnector {
    url = "<%= @vars['stats_url'] %>"
    timeout = "3.seconds"
  }
}
